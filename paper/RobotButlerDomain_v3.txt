Robot butler domain.

A robot butler has to deliver tea to 3 people (p1, p2, p3) in an office building.
The building has 3 rooms (office space, conference room and kitchen).
The 3 people can be in any one of these locations. The robot can be in any one room.
The robot delivers beverages at different times of the day.

states of MDP:
#person in #location.
#robot's location.
Formula for total number of states:
(2*R)^N , R is number of rooms, N is number of people.
1 : 8 states
2 : 64 states
3 : 512 states
4 : 4096 states

goal states:
#person has #drink in #location.

statics:
time = {morning, afternoon, evening}
role = {salesman, engineer, manager}
room = {office_space, conference_room, kitchen, workshop}
using_equipment = {True, False}

Fluents:
location of butler changes when the butler moves.
location of people changes when people move.
person has a drink if the person didn't have a drink before and the robot gives them a drink.

Robot can do these actions:
move(robot, #room).
serve(person).

What the robot knows:
Knows that it cannot be in more than 1 location at once.
Knows that it cannot be in in more than 1 different room at once.
The robot can only deliver one beverage to one person.
The robot cannot deliver a beverage if it is not in the same location as the person.
The engineers prefer tea in the morning.

What it doesn't know:
impossible serve(#person) if person using equipment.
impossible serve(#person) if person's location is workshop.
impossible serve(#person) if location of person is in conference_room.
--There are work changes which cause the engineer to prefer tea during the afternoon.
impossible serve(#person) if person is engineer and time is not afternoon.

Different Scenarios:
The robot could be on different floors of the building (i.e. The combination of rooms change). 
The people in a particular floor can also change (e.g. 2 salesman and a manager).


